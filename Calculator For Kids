// Importing statements that allow for the GUI to work
import java.awt.*; 
import java.awt.event.*; 
import java.text.*; 
import java.util.*; 
import javax.swing.*; 
import java.lang.Math;

public class calculator extends JFrame implements ActionListener{ // Calling superclass of JFrame into subclass of calculator

//---------------------------------------------------------------------------------------------------------------------------------    
    
    private JLabel number1;        // Label 
    private JLabel number2;    
    private JTextField num1;       // Display
    private JTextField num2;    
    private JButton addButton; 
    private JButton minusButton;   // Button
    private JButton timesButton; 
    private JButton divideButton; 
    private JLabel total; 
    private JTextField tl; 
    private JTextField exp1;
    private JTextField exp2;
    private JLabel expNum1;
    private JLabel expNum2;
    private JSpinner xSpinner;
    private JSpinner xSpinner2;    // Spinner
    private JLabel currGrade;
    private JSlider grade;         // Slider
    private JButton surprise;
     
       // Constructor 
        calculator(){ 
       
          GridBagConstraints positionConst = null; 
          setTitle("CALCULATOR FOR KIDS"); 
          
          // Specifies the types of values displayed in spinner
          SpinnerNumberModel spinnerModel = null;
          SpinnerNumberModel spinnerModel2 = null;
          int initYear = 1;         // Spinner initial value display
          int minYear = 1;          // Spinner min value
          int maxYear = 100000000;  // Spinner max value
          int stepVal = 1;          // Spinner step
          int sMin = 0;             // Slider min value
          int sMax = 10;            // Slider max value
          
          // Labels
          number1 = new JLabel("Enter Digit 1 (x):");
          number1.setFont(new Font("Courier", Font.PLAIN, 32));
          number2 = new JLabel("Enter Digit 2 (y):"); 
          number2.setFont(new Font("Courier", Font.PLAIN, 32));
          total = new JLabel("           ANSWER:");
          total.setFont(new Font("Courier", Font.PLAIN, 32));
          expNum1 = new JLabel("              x^n:");
          expNum1.setFont(new Font("Courier", Font.PLAIN, 32));
          expNum2 = new JLabel("              y^n:");
          expNum2.setFont(new Font("Courier", Font.PLAIN, 32));
          currGrade = new JLabel(" Mood from 0 - 10:");
          currGrade.setFont(new Font("Courier", Font.PLAIN, 32));
         
          // Create a spinner model, the spinner, and set the change listener
          spinnerModel = new SpinnerNumberModel(initYear, minYear, maxYear, stepVal);
          xSpinner = new JSpinner(spinnerModel);
          xSpinner.setFont(new Font("Courier", Font.PLAIN, 32));
          spinnerModel2 = new SpinnerNumberModel(initYear, minYear, maxYear, stepVal);
          xSpinner2 = new JSpinner(spinnerModel2);//xSpinner.addChangeListener();
          xSpinner2.setFont(new Font("Courier", Font.PLAIN, 32));       
  
          // Setting fields
          num1 = new JTextField(12);
          num1.setFont(new Font("Courier", Font.PLAIN, 32));
          num1.setEditable(true); 
          num1.setText("0"); 
     
          num2 = new JTextField(12);
          num2.setFont(new Font("Courier", Font.PLAIN, 32));
          num2.setEditable(true); 
          num2.setText("0"); 
           
          tl = new JTextField(12);
          tl.setFont(new Font("Courier", Font.PLAIN, 32));
          tl.setEditable(false);  
          
          // Button color
          addButton = new JButton("+");
          addButton.setFont(new Font("Courier", Font.PLAIN, 35));
          addButton.setBackground(Color.PINK);
          addButton.setForeground(Color.WHITE);
          minusButton = new JButton("-"); 
          minusButton.setFont(new Font("Courier", Font.PLAIN, 35));
          minusButton.setBackground(Color.PINK);
          minusButton.setForeground(Color.WHITE);
          timesButton = new JButton("*"); 
          timesButton.setFont(new Font("Courier", Font.PLAIN, 35));
          timesButton.setBackground(Color.PINK);
          timesButton.setForeground(Color.WHITE);
          divideButton = new JButton("/"); 
          divideButton.setFont(new Font("Courier", Font.PLAIN, 35));
          divideButton.setBackground(Color.PINK);
          divideButton.setForeground(Color.WHITE);
          surprise = new JButton("!!!!!!!!!!!!!!"); 
          surprise.setFont(new Font("Courier", Font.PLAIN, 35));
          surprise.setBackground(Color.PINK);
          surprise.setForeground(Color.WHITE);

          addButton.addActionListener(this); 
          minusButton.addActionListener(this); 
          timesButton.addActionListener(this); 
          divideButton.addActionListener(this);
          surprise.addActionListener(this);
          
          // Slider
          grade = new JSlider(sMin, sMax);
          grade.setFont(new Font("Courier", Font.PLAIN, 32));
          grade.setMajorTickSpacing(10);
          grade.setMinorTickSpacing(1);
          grade.setPaintTicks(true);
          grade.setPaintLabels(true);
          
          // Specify component's grid location  
          setLayout(new GridBagLayout()); 
          positionConst = new GridBagConstraints(); 
           
          positionConst.gridx = 0; 
          positionConst.gridy = 0; 
          positionConst.insets = new Insets(10, 10, 10, 10); //top,left,bottom,right 
          add(number1, positionConst); 
     
          positionConst.gridx = 1; 
          positionConst.gridy = 0; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(num1, positionConst); 
     
          positionConst.gridx = 0; 
          positionConst.gridy = 1; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(number2, positionConst); 
     
          positionConst.gridx = 1; 
          positionConst.gridy = 1; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(num2, positionConst); 
     
          positionConst.gridx = 2; 
          positionConst.gridy = 0; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(addButton, positionConst); 
           
          positionConst.gridx = 2; 
          positionConst.gridy = 1; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(minusButton, positionConst); 
           
          positionConst.gridx = 2; 
          positionConst.gridy = 2; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(timesButton, positionConst); 
           
          positionConst.gridx = 2; 
          positionConst.gridy = 3; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(divideButton, positionConst); 
           
          positionConst.gridx = 0; 
          positionConst.gridy = 4; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(total, positionConst); 
           
          positionConst.gridx = 1; 
          positionConst.gridy = 4; 
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(tl, positionConst);  
          
          positionConst.gridx = 0;
          positionConst.gridy = 2;
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(expNum1, positionConst);
      
          positionConst.gridx = 0;
          positionConst.gridy = 3;
          positionConst.insets = new Insets(10, 10, 10, 10);
          add(expNum2, positionConst);
                   
          positionConst.gridx = 1;
          positionConst.gridy = 2;
          positionConst.insets = new Insets(10, 10, 10, 10); 
          add(xSpinner, positionConst);
         
          positionConst.gridx = 1;
          positionConst.gridy = 3;
          positionConst.insets = new Insets(10, 10, 10, 10);
          add(xSpinner2, positionConst);
          
          positionConst.gridx = 0;
          positionConst.gridy = 6;
          positionConst.insets = new Insets(10, 10, 10, 10);
          add(currGrade, positionConst);
          
          positionConst.gridx = 1;
          positionConst.gridy = 6;
          positionConst.insets = new Insets(10, 10, 10, 10);
          add(grade, positionConst);
          
          positionConst.gridx = 0;
          positionConst.gridy = 7;
          positionConst.insets = new Insets(10, 10, 10, 10);
          add(surprise, positionConst);
          
       }    
       @Override 

//---------------------------------------------------------------------------------------------------------------------------------
       
       public void actionPerformed(ActionEvent event) { 

          String number1 = num1.getText(); 
          String number2 = num2.getText(); 
          Integer exp1 = (Integer)xSpinner.getValue();
          Integer exp2 = (Integer)xSpinner2.getValue();
          double N1 = 0;  
          double N2 = 0; 
          Integer E1 = 0;
          Integer E2 = 0;
           
          N1 = Double.parseDouble(number1); 
          N2 = Double.parseDouble(number2); 
          
          E1 = exp1;
          E2 = exp2;
           
          JButton sourceEvent = (JButton) event.getSource(); 
          
          // Action that happens when user presses a certain button 
          if (sourceEvent == addButton) {
             double add1 = Math.pow(N1,E1);
             double add2 = Math.pow(N2,E2);
              
            tl.setText(Double.toString(Math.pow(N1,E1) + Math.pow(N2,E2)));    
          } 
          if (sourceEvent == minusButton) { 
             tl.setText(Double.toString(Math.pow(N1,E1) - Math.pow(N2,E2))); 
          } 
          if (sourceEvent == timesButton) { 
             tl.setText(Double.toString(Math.pow(N1,E1) * Math.pow(N2,E2))); 
          } 
          if (sourceEvent == divideButton) { 
             if (N2 == 0){ 
             JOptionPane.showMessageDialog(this, "A NUMBER CANNOT BE DIVIDED BY ZERO"); 
             } 
             tl.setText(Double.toString(Math.pow(N1,E1) / Math.pow(N2,E2))); 
          } 
          if (sourceEvent == surprise){
          
             final ImageIcon icon1 = new ImageIcon("giphy.gif");
             JOptionPane.showMessageDialog(null, "(: NOW THIS IS YOUR REAL MOOD :)", "", +JOptionPane.INFORMATION_MESSAGE, icon1);
          }
    return; 
    } 
    
//---------------------------------------------------------------------------------------------------------------------------------
    
    public static void main(String[] args){ 
     
       calculator myFrame = new calculator(); 
 
       myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
       myFrame.pack(); 
       myFrame.setVisible(true); 
    } 
    
//--------------------------------------------------------------------------------------------------------------------------------- 

}
